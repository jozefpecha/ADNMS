#!/bin/bash
#PBS -q qprod
#PBS -N model_eval
#PBS -A OPEN-23-32
#PBS -l select=1:ncpus=128
#PBS -l walltime=03:00:00
#PBS -k oe

source activate crem

# path to database with generated molecules
input_db="$1"

# path to ouput directory
output_dir="$2"

# path to reference PDB molecule (ligand from protein-ligand complex)
ref_mol="$3"

# path to pdbqt file with protein for docking
protein="$4"

# path to config file with grid box size and center coordinates
config="$5"


mkdir -p $output_dir

# extract mols from db with visited_ids_count = max(visited_ids_count)
sqlite3 $input_db < get_sdf.sql > $output_dir/out.sdf

# check if out.sdf is empty
if ! grep -q '[^[:space:]]' "$output_dir/out.sdf"; then
	echo "Pharmacophore didn't match any starting fragments."
	exit
fi

# split out.sdf according to number of features matched
python split_sdf.py -i $output_dir/out.sdf -o $output_dir

for dir in $output_dir/*/
do
	dir=${dir%*/}

	python model_evaluation.py -i $dir/*.sdf -o $dir -r $ref_mol

	python physchem_calc.py -i $dir/smiles.smi -o $dir/physchem_props.csv

	python sa_scorer/sascorer_mp.py $dir/smiles.smi > $dir/sascores.csv

	python vina_dock.py -i $dir/new_out.sdf --no_protonation -p $protein -o $dir/docking_results.db -s $config --sdf -v --hostfile $PBS_NODEFILE
	mkdir -p $dir/docking/docked_mols
	mkdir -p $dir/docking/pre_docking_mols
	mkdir -p $dir/rmsd_results
	
	obabel docking_results.sdf -O docking/docked_mols/mol.mol2 -m
	obabel new_out.sdf -O docking/pre_docking_mols/mol.mol2 -m
	
	for file in $dir/docking/docked_mols/
	do
		python rmsd_rdkit.py -i $file -r $dir/docking/pre_docking_files/$file -o $dir/rmsd_results/mol.txt
	
	done	

	#python model_evaluation_2.py -p $dir/physchem_props.csv -sa $dir/sascores.csv -s tmp_res.csv -d $dir/docking_results.db -r $dir/rsmd_results/ -o $dir/results.csv
done

echo "Done"
